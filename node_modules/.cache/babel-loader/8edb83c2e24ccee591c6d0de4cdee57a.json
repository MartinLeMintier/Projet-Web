{"ast":null,"code":"import _classCallCheck from \"/Users/martin/Desktop/ProjetWeb/projet/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/martin/Desktop/ProjetWeb/projet/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/martin/Desktop/ProjetWeb/projet/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/martin/Desktop/ProjetWeb/projet/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/martin/Desktop/ProjetWeb/projet/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/martin/Desktop/ProjetWeb/projet/src/Widget.js\";\nimport React, { Component } from 'react'; // Import components\n\nimport Loading from './Loading'; //Import styling\n\nimport '../styles/Widget.css';\n\nvar Widget =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Widget, _Component);\n\n  function Widget(props) {\n    var _this;\n\n    _classCallCheck(this, Widget);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Widget).call(this, props)); // Create inline styles to make grid elements span multiple rows/columns\n\n    _this.spanStyles = {};\n\n    if (props.colspan !== 1) {\n      _this.spanStyles.gridColumn = \"span \".concat(props.colspan);\n    }\n\n    if (props.rowspan !== 1) {\n      _this.spanStyles.gridRow = \"span \".concat(props.rowspan);\n    }\n\n    return _this;\n  }\n\n  _createClass(Widget, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: this.spanStyles,\n        className: \"Widget\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.heading), this.props.loading ? React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }) : \"\"), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.props.children));\n    }\n  }]);\n\n  return Widget;\n}(Component); // Provide default settings for when they aren't supplied\n\n\nWidget.defaultProps = {\n  heading: \"Unnamed Widget\",\n  colspan: 1,\n  rowspan: 1 // Enforce the type of props to send to this component\n\n};\nWidget.propTypes = {\n  heading: React.PropTypes.string,\n  colspan: React.PropTypes.number,\n  rowspan: React.PropTypes.number,\n  children: React.PropTypes.element.isRequired\n};\nexport default Widget;","map":{"version":3,"sources":["/Users/martin/Desktop/ProjetWeb/projet/src/Widget.js"],"names":["React","Component","Loading","Widget","props","spanStyles","colspan","gridColumn","rowspan","gridRow","heading","loading","children","defaultProps","propTypes","PropTypes","string","number","element","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;AACA,OAAO,sBAAP;;IAEMC,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN,GADe,CAGf;;AACA,UAAKC,UAAL,GAAkB,EAAlB;;AACA,QAAID,KAAK,CAACE,OAAN,KAAkB,CAAtB,EAAyB;AACrB,YAAKD,UAAL,CAAgBE,UAAhB,kBAAqCH,KAAK,CAACE,OAA3C;AACH;;AACD,QAAIF,KAAK,CAACI,OAAN,KAAkB,CAAtB,EAAyB;AACrB,YAAKH,UAAL,CAAgBI,OAAhB,kBAAkCL,KAAK,CAACI,OAAxC;AACH;;AAVc;AAWlB;;;;6BAEQ;AACL,aACI;AAAK,QAAA,KAAK,EAAE,KAAKH,UAAjB;AAA6B,QAAA,SAAS,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,KAAL,CAAWM,OADhB,CADJ,EAKK,KAAKN,KAAL,CAAWO,OAAX,GAAqB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB,GAAmC,EALxC,CADJ,EAQI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKP,KAAL,CAAWQ,QADhB,CARJ,CADJ;AAcH;;;;EA7BgBX,S,GAgCrB;;;AACAE,MAAM,CAACU,YAAP,GAAsB;AAClBH,EAAAA,OAAO,EAAE,gBADS;AAElBJ,EAAAA,OAAO,EAAE,CAFS;AAGlBE,EAAAA,OAAO,EAAE,CAHS,CAMtB;;AANsB,CAAtB;AAOAL,MAAM,CAACW,SAAP,GAAmB;AACfJ,EAAAA,OAAO,EAAEV,KAAK,CAACe,SAAN,CAAgBC,MADV;AAEfV,EAAAA,OAAO,EAAEN,KAAK,CAACe,SAAN,CAAgBE,MAFV;AAGfT,EAAAA,OAAO,EAAER,KAAK,CAACe,SAAN,CAAgBE,MAHV;AAIfL,EAAAA,QAAQ,EAAEZ,KAAK,CAACe,SAAN,CAAgBG,OAAhB,CAAwBC;AAJnB,CAAnB;AAOA,eAAehB,MAAf","sourcesContent":["import React, { Component } from 'react';\n\n// Import components\nimport Loading from './Loading';\n\n//Import styling\nimport '../styles/Widget.css';\n\nclass Widget extends Component {\n    constructor(props) {\n        super(props);\n\n        // Create inline styles to make grid elements span multiple rows/columns\n        this.spanStyles = {};\n        if (props.colspan !== 1) {\n            this.spanStyles.gridColumn = `span ${props.colspan}`;\n        }\n        if (props.rowspan !== 1) {\n            this.spanStyles.gridRow = `span ${props.rowspan}`;\n        }\n    }\n\n    render() {\n        return (\n            <div style={this.spanStyles} className=\"Widget\">\n                <div className=\"header\">\n                    <h2>\n                        {this.props.heading}\n                    </h2>\n                    {/* Conditionally show the loading spinner */}\n                    {this.props.loading ? <Loading /> : \"\"}\n                </div>\n                <div className=\"content\">\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n\n// Provide default settings for when they aren't supplied\nWidget.defaultProps = {\n    heading: \"Unnamed Widget\",\n    colspan: 1,\n    rowspan: 1\n}\n\n// Enforce the type of props to send to this component\nWidget.propTypes = {\n    heading: React.PropTypes.string,\n    colspan: React.PropTypes.number,\n    rowspan: React.PropTypes.number,\n    children: React.PropTypes.element.isRequired\n}\n\nexport default Widget;"]},"metadata":{},"sourceType":"module"}